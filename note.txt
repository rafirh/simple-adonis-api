SIMPLE REST API:
    1. adonis new (name-project) --api-only // perintah yang digumakan untuk membuat project adonis dengan type api saja
    2. adonis make:migration (nama-tabel) // perintah yang digunakan untuk membuat migration baru
    3. adonis migration:run // perintah yang digunakan untuk migrasi database, jangan lupa install mysql dulu sebelum menjalankan perintah tersebut
    4. adonis make:model (nama-model) // digunakan  untuk membuat model baru
    5. adonis make:controller (nama-controller) // digunakan utuk membuat controller baru
    6. adonis make:model -c // digunakan untuk membuat model sekaligus controllernya
    7. adonis migration:refresh digunakan untuk menghapus semua tabel dan membuat ulang tabel lagi

SYNCHROUNUS DAN ASYNCHROUNUS:
    1. Ini adalah suatu istilah yang wajib diketahui programmer.
    2. Synchrounus atau bisa disebut BLOCKING adalah sifat suatu bahasa pemrograman yang mengeksekusi code programnya berurutan dari baris paliang atas sampai ke bawah.
    3. Asynchrounus atau bisa disebut NON-BLOCKING adalah sifat suatu bahasa pemrograman yang mengeksekusi code programnya tidak selalu berurutan berdasarkan urutan baris tetapi berdasarkan waktu proses, jadi semua code program akan dijalankan bersama.
    4. Salah satu contoh bahasa pemrograman asyncronus adalah JavaScript, jadi jika kita ingin membuat code java script menjadi synchrounus kita bisa menggunakan function callback, promise, dan asyn / await.

CALLBACK:
    1. Callback sebenarnya adalah function bedanya dengan function pada umumnya adalah cara di eksekusinya function ini.
    2. Function callback dieksekusi di dalam function lain melalui parameter. Contoh code:
        function sum(a, b, callBack){
            console.log(a + b)
            callBack()
        }
        function greeting(){
            console.log('Hello callBack')
        }
        sum(1, 2, greeting)

        Output:
            3
            Hello callBack
    
    3. Contoh lain: sebagai injeksi
        let sum = (x, y, callBack) => {
            result = x + y
            if (typeof callBack == 'function'){
                result = callBack(x, y)
            }
            return result
        }

        a = sum(2, 2, (x, y) =>{
            return "The result is " + (x + y)
        })

        console.log(a); // The result is 4

         
